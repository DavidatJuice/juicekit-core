<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2007-2010 Juice, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<mx:VBox height="100%"
         width="100%"
         addedToStage="onAddedToStage()"
         verticalScrollPolicy="off"
         horizontalScrollPolicy="off"
         xmlns:mx="http://www.adobe.com/2006/mxml">

  <!---
  
  <p>A VBox component that will resize the browser container to the total
  height of the VBox contents. This avoids creating Flex scrollbars,
  making the Flex app feel more like a normal HTML page.</p>
  
  <p><code>BrowserCanvas</code> is a component developed by Noel Billig that
  uses JavaScript injection across the ExternalInterface to resize the HTML
  object that holds the SWF content.</p>

  <p>For more information, see:</p>
  
  <ul>
  <li>http://www.actionscript.org/resources/articles/745/1/JavaScript-and-VBScript-Injection-in-ActionScript-3/Page1.html</li>
  <li>http://www.dncompute.com/blog/2008/06/23/browsercanvas-the-worlds-easiest-way-to-dynamically-resize-flash.html</li>
  </ul>
  
  <p>Checklist to make browser resizing work</p>
  
  <ol>
    <li>Application needs to have <code>verticalScrollPolicy="off" horizontalScrollPolicy="off"</code></li>
    <li>BrowserCanvasVBox needs to be the <em>parent</em> of all items in the layout.</li>
    <li>The BrowserCanvasVBox needs to have htmlObjectId set correctly.</li>
  <li>ViewStacks, in particular, need to resize themselves on change. For instance:</li>
  
  <pre><code>
    <ViewStack id="vs"
       change="vs.height=vs.selectedChild.height ? vs.selectedChild.height : vs.selectedChild.measuredHeight;vs.width=vs.selectedChild.width ? vs.selectedChild.width : vs.selectedChild.measuredWidth;"/>
  </code></pre>
  
  <p><b>Important!</b> To test this component, you MUST change the security settings on your
  Flash browser. This is because a locally served SWF operates in an untrusted mode
  and hence the browser resizing won't work.</b></p>
  
  <ol>
    <li>Go to http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html</li>
    <li>Select the global security settings tab (the third one over).</li>
    <li>Edit locations and add a location to trust your Flex workspace.</li>
  </ol>
  
  @param htmlObjectId _must_ be set to the id of the SWF object in the
  html page. 
  
  @see org.juicekit.visual.container.BrowserCanvas
  
  -->


  <mx:Script>
    <![CDATA[

    private var canvas:BrowserCanvas;

    /**
     * The id of the SWF object in the HTML page. This must
     * be set correctly for BrowserCanvasVBox to resize.
     */
    public function set htmlObjectId(v:String):void {
      _htmlObjectId = v;
      if (canvas) {
        canvas.containerId = htmlObjectId;
      }
    }

    public function get htmlObjectId():String {
      return _htmlObjectId;
    }

    private var _htmlObjectId:String = "myContent";


    private function onAddedToStage():void {
      canvas = new BrowserCanvas(stage, htmlObjectId);
      canvas.height = this.measuredHeight.toString();
      canvas.width = this.measuredWidth.toString();
    }

    override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
      if (canvas) {
        canvas.height = this.measuredHeight.toString();
        canvas.width = this.measuredWidth.toString();
      }
      super.updateDisplayList(unscaledWidth, unscaledHeight);
    }
      
    ]]>
  </mx:Script>
</mx:VBox>
